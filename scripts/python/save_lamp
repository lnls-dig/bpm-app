#!/usr/bin/env python3

'''Save RTMLAMP readings from FOFB controllers. Run as:

    ./save_lamp out.pickle

Author: Ã‰rico Nogueira
'''

from pickle import dump
import sys
from time import sleep

from bpm_app.pvs import create_pv, put_pv, get_pv, wait_for_pv_connection, wait_pv
from bpm_app.sirius import rtmlamp_slot, get_pv_prefix, crate_number

out_file = sys.argv[1]

trigger_rep = []
trigger_event = []
samples_pre = []

current_data = {}
voltage_data = {}

crates = [crate_number(i) for i in range(1, 21)]
for crate in crates:
    prefix = get_pv_prefix(crate, rtmlamp_slot)

    trigger_rep.append(create_pv(prefix + f'ACQTriggerRep-Sel'))
    trigger_event.append(create_pv(prefix + f'ACQTriggerEvent-Sel'))
    samples_pre.append(create_pv(prefix + f'ACQSamplesPre-SP'))

    current_data[crate] = [create_pv(prefix + f'GEN_CH{i}ArrayData') for i in range(12)]
    voltage_data[crate] = [create_pv(prefix + f'GEN_CH{i+12}ArrayData') for i in range(12)]

wait_for_pv_connection()

put_pv(trigger_rep, 0, wait=False)
put_pv(samples_pre, 100000, wait=False)
wait_pv()

put_pv(trigger_event, 0)
sleep(10)

data = {}
for crate in crates:
    data[crate] = get_pv(current_data[crate]), get_pv(voltage_data[crate])

with open(out_file, 'wb') as f:
    dump(data, f)
